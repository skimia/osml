/// <reference path="def/_all.d.ts"/>
var osml;
(function (osml) {
    'use strict';
    var app = angular.module('osml', []);
    //app.factory('DataSources', services.DataSources);
    osml.registerDirective = function (directive) {
        var name = directive[0].toLowerCase() + directive.slice(1);
        app.directive(name, osml.directives[directive].factory());
    };
    osml.registerService = function (service) {
        var name = service[0].toLowerCase() + service.slice(1);
        app.factory(name, osml.services[service]);
    };
})(osml || (osml = {}));

/// <reference path="../osml.ts"/>
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var osml;
(function (osml) {
    var framework;
    (function (framework) {
        'use strict';
        var Directive = (function (_super) {
            __extends(Directive, _super);
            function Directive() {
                _super.call(this);
                this.$inject = [];
            }
            Directive.prototype.link = function ($scope, element, attrs) {
            };
            Directive.factory = function () {
                var _this = this;
                return function () {
                    return new osml.directives[_this.name]();
                };
            };
            return Directive;
        })(framework.FunctionClass);
        framework.Directive = Directive;
    })(framework = osml.framework || (osml.framework = {}));
})(osml || (osml = {}));

// require '../osml.js'
var osml;
(function (osml) {
    var services;
    (function (services) {
        var DataSources = (function () {
            function DataSources() {
                this.datasources = {
                    test: 'test'
                };
            }
            DataSources.prototype.add = function (name, datasource) {
            };
            DataSources.prototype.delete = function (name) {
            };
            DataSources.prototype.get = function (name) {
                return this.datasources[name];
            };
            return DataSources;
        })();
        services.DataSources = DataSources;
        osml.registerService('DataSource');
    })(services = osml.services || (osml.services = {}));
})(osml || (osml = {}));

// require './Directive.js'
// require '../services/DataSources.js'
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var osml;
(function (osml) {
    var framework;
    (function (framework) {
        'use strict';
        var DataSourceDirective = (function (_super) {
            __extends(DataSourceDirective, _super);
            function DataSourceDirective(datasource) {
                _super.call(this);
                this.datasource = datasource;
            }
            DataSourceDirective.factory = function () {
                var _this = this;
                var dir = function (datasource) {
                    return new osml.directives[_this.name](datasource);
                };
                dir['$inject'] = ['DataSource'];
                return dir;
            };
            return DataSourceDirective;
        })(framework.Directive);
        framework.DataSourceDirective = DataSourceDirective;
    })(framework = osml.framework || (osml.framework = {}));
})(osml || (osml = {}));

// require '../osml.js'
// require '../framework/DataSourceDirective.js'
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
/// <reference path="../osml.ts"/>
var osml;
(function (osml) {
    var directives;
    (function (directives) {
        'use strict';
        var OsContainer = (function (_super) {
            __extends(OsContainer, _super);
            function OsContainer(datasource) {
                _super.call(this, datasource);
            }
            OsContainer.prototype.link = function ($scope, element, attrs) {
                element.addClass('os-container');
            };
            return OsContainer;
        })(osml.framework.DataSourceDirective);
        directives.OsContainer = OsContainer;
        osml.registerDirective('OsContainer');
    })(directives = osml.directives || (osml.directives = {}));
})(osml || (osml = {}));

/// <reference path="../osml.ts"/>
var osml;
(function (osml) {
    var framework;
    (function (framework) {
        'use strict';
        var FunctionClass = (function () {
            function FunctionClass() {
            }
            FunctionClass.prototype.apply = function (thisArg, argArray) {
                return undefined;
            };
            FunctionClass.prototype.call = function (thisArg, argArray) {
                return undefined;
            };
            FunctionClass.prototype.bind = function (thisArg, argArray) {
                return undefined;
            };
            FunctionClass.prototype.toMethod = function (newHome) {
                return undefined;
            };
            return FunctionClass;
        })();
        framework.FunctionClass = FunctionClass;
    })(framework = osml.framework || (osml.framework = {}));
})(osml || (osml = {}));
